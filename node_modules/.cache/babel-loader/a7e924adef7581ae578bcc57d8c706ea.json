{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/Arena Holdings/Frontend/arena/src/screens/ContactScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { HeaderComponent } from '../components/ComponentExports';\nimport LoadingIndicator from '../utils/LoadingIndicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactScreen = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [formSubmissionStatus, setformSubmissionStatus] = useState('none');\n\n  const handleFormSubmission = e => {\n    e.preventDefault();\n    setLoading(true); // submit form to backend\n\n    fetch('https://arena-django-backend.herokuapp.com/sendMessage', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"message_sender_name\": name,\n        \"message_sender_email\": email,\n        \"message_sender_mobile_number\": mobile,\n        \"message_content\": message\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container contact-screen-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"How can we help you?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"For all enquiries, please email us using the form below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), formSubmissionStatus === \"successful\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        role: \"alert\",\n        children: \"Message has been submitted successfully.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this) : formSubmissionStatus === \"unsuccessful\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: \"Unable to submit message, please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this) : loading ? /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmission,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"form-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: val => {\n              setName(val.target.value.trim());\n            },\n            className: \"form-control\",\n            id: \"name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"mobile\",\n            className: \"form-label\",\n            children: \"Mobile number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            className: \"form-control\",\n            value: mobile,\n            onChange: val => {\n              setMobile(val.target.value.trim());\n            },\n            id: \"mobile\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            value: email,\n            onChange: val => {\n              setEmail(val.target.value.trim());\n            },\n            id: \"email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            className: \"form-label\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"message\",\n            rows: \"5\",\n            value: message,\n            onChange: val => {\n              setMessage(val.target.value.trim());\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary send-message-btn\",\n          type: \"submit\",\n          children: \"Send message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ContactScreen, \"gtCDuoRmSqFqAzGbs0x32TPKyuE=\");\n\n_c = ContactScreen;\nexport default ContactScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactScreen\");","map":{"version":3,"sources":["/Users/joey/Desktop/Arena Holdings/Frontend/arena/src/screens/ContactScreen.jsx"],"names":["React","useState","HeaderComponent","LoadingIndicator","ContactScreen","name","setName","mobile","setMobile","email","setEmail","message","setMessage","loading","setLoading","formSubmissionStatus","setformSubmissionStatus","handleFormSubmission","e","preventDefault","fetch","method","headers","body","JSON","stringify","val","target","value","trim"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {HeaderComponent} from '../components/ComponentExports';\nimport LoadingIndicator from '../utils/LoadingIndicator';\nconst ContactScreen = ()=>{\n    const [name, setName] = useState('');\n    const [mobile, setMobile] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [formSubmissionStatus,setformSubmissionStatus] = useState('none');\n\n    const handleFormSubmission = (e)=>{\n        e.preventDefault();\n        setLoading(true);\n        // submit form to backend\n        fetch('https://arena-django-backend.herokuapp.com/sendMessage',\n            {\n                method:'POST',\n                headers:{\n                    'Content-Type':'application/json'\n                },\n                body:JSON.stringify({\n                    \"message_sender_name\":name,\n                    \"message_sender_email\":email,\n                    \"message_sender_mobile_number\":mobile,\n                    \"message_content\":message,\n                })\n            }\n        )\n        \n    }\n\n    return(\n        <>\n            <HeaderComponent/>\n            <div className=\"container contact-screen-container\">\n                <div className=\"contact-form-container\">\n                    <h1>How can we help you?</h1>\n                    <p>For all enquiries, please email us using the form below.</p>\n                </div>\n                {\n                    formSubmissionStatus === \"successful\"?\n                        <div className=\"alert alert-success\" role=\"alert\">\n                            Message has been submitted successfully.\n                        </div>\n                    :\n                    formSubmissionStatus === \"unsuccessful\"?\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            Unable to submit message, please try again later.\n                        </div>\n                    :\n                    loading ? \n                        <LoadingIndicator/> \n                    :\n                        <form onSubmit={handleFormSubmission}>\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"name\" className=\"form-label\">Name</label>\n                                <input type=\"text\" value={name} onChange={(val)=>{setName(val.target.value.trim())}} className=\"form-control\" id=\"name\" required/>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"mobile\" className=\"form-label\">Mobile number</label>\n                                <input type=\"tel\" className=\"form-control\" value={mobile} onChange={(val)=>{setMobile(val.target.value.trim())}} id=\"mobile\" required/>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n                                <input type=\"email\" className=\"form-control\" value={email} onChange={(val)=>{setEmail(val.target.value.trim())}} id=\"email\" required/>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"message\" className=\"form-label\">Message</label>\n                                <textarea className=\"form-control\" id=\"message\" rows=\"5\" value={message} onChange={(val)=>{setMessage(val.target.value.trim())}} required></textarea>\n                            </div>\n                            <button className=\"btn btn-primary send-message-btn\" type=\"submit\">Send message</button>\n                        </form>\n                }\n            </div>\n        </>\n    )\n}\n\nexport default ContactScreen;"]},"metadata":{},"sourceType":"module"}